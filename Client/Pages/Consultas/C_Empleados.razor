@page "/ConsultaEmpleado";
@inject HttpClient httpClient
@attribute [Authorize(Roles = "Administrador")]
<div class="card">
    <div class="card-header d-flex align-items-center">
        <img src="zyroimage.png" class="img-logo" />
        <h1>Consulta de Empleado</h1>
    </div>
    <div class="row">
        <div class="col-md-3 ">
            <label>Filtrar ID:</label>
            <InputNumber @bind-Value="Filtro" class="form-control"></InputNumber>
        </div>

        <div class="col-md-3 ">
            <label>Filtrar Nombre:</label>
            <InputText @bind-Value="Nombre" class="form-control"></InputText>
        </div>

        <div class="col-md-3 ">
            <br />
            <button type="button" class="btn btn-outline-primary oi oi-magnifying-glass" @onclick="Buscar"></button>
        </div>
    </div>


@if (Empleados is not null)
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Empleado ID</th>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>Tel&eacute;fono</th>
                    <th>Celular</th>
                    <th>Email</th>
                    <th>Direcci&oacute;n</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var empleados in Empleados)
                {
                    <tr>
                        <td>@empleados.EmpleadoId</td>
                        <td>@empleados.Nombre</td>
                        <td>@empleados.Apellido</td>
                        <td>@empleados.Teléfono</td>
                        <td>@empleados.Celular</td>
                        <td>@empleados.Email</td>
                        <td>@empleados.Dirección</td>
                        <td><a href="RegistroEmpleado/@empleados.EmpleadoId"><i class="oi oi-pencil"></i></a></td>
                    </tr>
                }
                <tr>
                    <td>Conteo: @Conteo</td>
                </tr>
            </tbody>
        </table>
    </div>
}
</div>

@code {

    public int Filtro { get; set; }
    public List<Empleados>? Empleados { get; set; }
    public Empleados? empleados { get; set; } = new Empleados();
    public int Conteo { get; set; }
    public string? Nombre { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Buscar();
    }

    public async Task Buscar()
    {
        var listaEmpleados = await httpClient.GetFromJsonAsync<List<Empleados>>($"api/Empleados");
        Empleados = listaEmpleados?.Where(x => (x.EmpleadoId == Filtro || Filtro == 0) &&
                                    (string.IsNullOrEmpty(Nombre) || (x.Nombre != null && x.Nombre.ToLower().Contains(Nombre.ToLower()))))
                                    .ToList();
        Conteo = Empleados != null ? Empleados!.Count() : 0;
        StateHasChanged();
    }

}
